const -> 상수
let -> es6에서 var대신 사용하는 변수형, var는 앞에서 먼저 정의한 변수를 또 정의해도 오류가 안생기는데
let은 그런 이상한 점들을 개선했음.

->어지간하면 const를 쓴다. 필요시에만 let을 쓴다.

자료형
1.Boolean 2.Null 3.Undefined 4.Number 5.String 6.Symbol 7.Object
이중에 심볼은 객체 내에서 key값으로 사용 가능하다.
심볼값으로 만든 객체 속성은 for문 등으로 나열 할 때 검색이 안되고
오직 직접 불러오기로만 볼 수 있다.
->속성을 추가해도 특정 몇몇개만 보고 싶은 경우에 사용한다.

Array -> 속성으로 꼭 문자열이 아니어도 되고 자료형이 동일할 필요도 없다.
const text = ["월","화",123,"수",true]; -> 가능
인덱스값은 숫자다. 인덱스 값으로 위치를 구분한다. 순번*

object -> 키값으로 검색 가능 키값:값 대응

css -> 구린 스타일 적용x 
원하는 속성 { -> *는 성능 저하를 불러오기 때문에 지정하고 싶은 부분만 쓰는 것을 권장함.
all:unset;
}

'hello '+name1+' I'm '+name2 = `hello ${name1} I'm ${name2}`
백틱 짱좋으니까 쓰라고 니콜라스가 강추함

console.log =/= return

dom -> document로 접근해서 자바스크립트로 html다루기

document.querySelector('.xyz')?
클래스 이름이 xyz인 첫번째 요소에 접근한다.
document.quertSelector('.xyz').style.color='red'; -> getElements랑 무슨 차이??
getElememt류보다 쿼리 셀렉터에서 선택자로 들어가야하는게 #이나 .을 쓰는등 좀 더 한정적이다.

쿼리 셀렉터가 더 뒤에 나온거기 때문에 지원을 안해주는 브라우저에서는 버그를 발생시킬 수 있음.
그리고 get류의 속도가 더 빠른데 

getElementById is better supported than querySelector. ->id는 어차피 1개니까 1개만 찾아서 수정할 수 있으니 id를 이용할 때는 get이 빨라서 낫고

querySelector is better supported than getElementsByClassName. -> 클래스는 여러개 다나오는 get보다는 제일 위에 있는 애만 해야할거면 쿼리가 낫고..
근데 애초에 클래스 네임은 쿼리 셀렉트 *올*이랑 비교된다.

쿼리 셀렉터는 반환값이 NodeList -> static한 list로 dom의 변경 요소가 실시간으로 변경되지 않는다.
get은 HTMLList로 동적인 리스트로 dom의 변경 요소가 실시간으로 변하지 않는다. 
-> a라는 클래스를 가진 녀석들을 b로 바꾼다고 할 때, get은 (i=0;i<3;i++)
a ->0            b->0         b->0
a ->1     ->    a->0    ->  a->0
a ->2            a->1         b->1

이건 동적으로 지금 반복문중에 변한 상황을 바로바로 반영해서 그런 것인데,
이걸 해결하는게 쿼리 셀렉터. 그냥 쌩까고 다 바꿈
----------------------------------------------------------------------------------------------
이벤트, 이벤트 핸들러

객체.addEventListener("이벤트명",function(){}); 
(function에는 미리 정의해놓은거 이름만 가져와서 () 안붙이고 사용 가능함.
()를 붙이면 지금 당장 사용하라는 뜻이라서..대신 저 칸에 함수를 바로 구현해놓는거는 이벤트 동작시에 실행된다.)

ex) form.addEventListener("submit",function);
     window.addEventListener("resize",function); 등
객체마다 가지고 있는 이벤트들이 다르기 때문에..찾아본다.

이벤트 리스너 함수는 function 어쩌구(event) {event.어쩌나~~}
로 받는 인자는 event만 넣을 수 있다. 콜백함수라는 부분은 잘 모르겠다. ->일단은 넘긴다.
-----------------------------------------------------------------------------------------------
prompt이제 안쓰고 html form으로 더 예쁘게 쓴다.
그리고 html은 정보만, css는 꾸미기만, 자바스크립트는 로직만 처리하게 하고 싶다. -->중요

const hi = document.querySelector("h1");
const body = document.querySelector("body");

function handleClick(){
    if(body.classList.contains("day")){
        body.classList.replace("day","night");
    }
    else if(body.classList.contains("night")){
        body.classList.replace("night","day");
    }
}

//모드 교체 말고 있으면 삭제 없으면 생성->토글

hi.addEventListener("click",handleClick);

이건 낮모드 밤모드 바꾸는 로직, css로 낮밤 색을 다르게 해줬음.
