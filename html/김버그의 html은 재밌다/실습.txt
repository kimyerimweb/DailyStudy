1강 Ad Banner

<meta name="viewport" content="width=device-width" initial-scale="1.0" />
head에서 빼먹지 말기

광고의 경우에 결제하기나 뭐하기 하고 버튼눌러서 연결되는거는
그냥 버튼을 누르는게 아니라 링크를 타고 움직이는거..
버튼 누르는거처럼 보이게는 css로 만든다.
그리고 그냥 창이 갑자기 움직이면 좀 그러니까 target="_blank"로 새창열기

스타일을 적용시키려고 할 때 하나로 묶을 수 있는 큰 단위는 div로 무난하게 묶는다.
스타일을 적용시킬 때 무난하게 사용하는 것은 class

2강 Google Search Result Item
제목도 링크의 기능을 겸하고 있으면 h1과 a태그를 같이 사용한다.
어떤 것을 감싸고 안에 넣을지는 개인 스타일이고 아무 상관없지만
그냥 내 기준에서는 <h1>태그가 좀 더 제목이라는 뜻이 있으니까
기능적인 a를 안에 넣고 h1으로 제목인걸 대표하는 스타일이 좋다.

그리고 내용 사이에 <div>,<span>이란 태그 형태가 일반 텍스트에 포함될 수도 있다.
그 경우에는 html escape code를 검색해서 사용한다.
<div>는 &ltdiv&gt로... 작다 크다는 아니지만 그냥 그림상으로 그러니까 이렇게 쓴다.

3강 feature box
설명하기 좀 애매한 img의 alt는 alt="" 이 상태로 비워놓는다.
그리고 그림이 정보가 아니라 꾸미기의 영역에 가까우면
html말고 css로 처리할 수 있다.

*컨트롤+/는 드래그한 전체범위 주석처리

4강 Logo in header
h1같이 제목을 써야하는 곳에 이미지를 넣어야할 것 같을 때,
가령 홈페이지 로고 누르면 홈으로 가는 버튼이라든가..
이런건 h1에 텍스트를 넣으면 css로 가려줘야하는게 번거롭기 때문에
비워놓고 대신에 img의 alt에 제목으로 넣으려고 했던 것을 넣으면 편하다.
그리고 <a>순서는 뭐..솔직히 h1이 먼저인지 a가 먼저인지 역시 상관없지만
전에 h1이 좋다고 생각했으니까 h1 a img순서로 넣는다

페이지네이션은 previous, next의 경우엔 약간 모양이 다르니까 따로 앵커태그를 쓰지만
1,2,3,4...쪽은 순서가 중요하고 똑같은 애들끼리 나열이니까 ol을 사용해본다.
똑같은 애들끼리 나열->ol or ul 순서 중요->ol!
그리고 ol,ul은 자식이 li밖에 못오니까 a태그는 li안에 넣는다.
...같이 생략도 리스트 안에는 있으니까 li로 만든다.

WAI-ARIA
인터넷을 사용하는 사람들이 더 쉽게 접근할 수 있게 도와주는 것
<a href="" aria-label="Go to previous page">previous</a>
이렇게 a의 속성으로 쓰면 그냥 리더기로 읽을 때 previous만 읽는게 아니라
aria-label에 있는 값으로 읽힌다 -> go to previous page
원래 프론트엔드에서는 정말 신경도 안쓰던 모든 사용자를 다 생각해야하고
보이는거랑 읽히는게 달라야하는 경우가 있기 때문에 그 경우에 애용하게 된다.

그냥 내가 쓰는건데 부모-자식은 구분되어야하고 프리티어가 얘까진 안건드리니까
알아서 계층이 나뉘면 들여쓰기하고 쓰기

5강 product card
lang=en 은 나중에 리더기로 읽을 때 영어로 읽는다.
문서는 한국어인데 저러면 한국어를 영어로 읽어서 심각..
alt는 생각보다 구구절절히 안하고 그냥 겹치는듯 싶으면 비운다.
책 표지도 alt="책표지"보다는 그냥 비우는 쪽을 선택했음.

css를 잘하면 그냥 html을 중요도 순서대로 작성하고 css로 건드는....

본문 줄글이 아니고 그냥 단어의 나열 수준이면 span으로 감싼다.
근데 중요한 정보면 span보다는 strong으로 한다.
안중요한 별표같은거는 그냥 span이든 div든 감싸고 aria-hidden="true"로 안읽는다.
별표같은거 그냥 무식하게 아이콘 받아서 넣는거...그냥 그렇게 한다.

6강 인수다구램
112 post -> post=112이다.
즉 dl을 사용할 수 있다..이건 이론만으로는 알 수가 없다ㅠ
dl dt->post dd->112 이런 식으로 활용한다
그리고 div로 dt-dd쌍을 묶는다. 그러면 여기 예제에서는 div쌍이 3개가 나옴.

7강 receipt
같은 제목인 것 같은데 스타일만 따로 처리가 됐으면..
가령 bill sharing request
      from kimyerim
이면 그냥 h1으로 묶고 아래 띄어쓰기하고 스타일이 다른 것을 span으로 묶는다.
바코드같이 중요한 그림은 strong으로 밖에서 한번 더 묶어줄 수 있다.
중요한 정보라는게 그냥 흔해 빠진거여도 가격이라든가 뭐 그런 사람들이 예민하게 생각할만한 컨텐츠면 다 strong으로 감싸줘도 된다.
그리고 사람따라 다르지만 목차1,2,3은 하나로 dl로 묶고 마지막 통계는 또 dl로 따로 묶는대신 div를 안쓰는 방식으로도 할 수 있다...
날짜는 경우에따라 다르지만 적어도 영수증에서는 span으로 처리 가능함.
잘 보고 경우따라 다르게 쓰자.
중요->strong
안중요->span
목록이나 가격이나 해당 목록이 몇개의 개수인가 ->dl

8강 input group
제출=form 태그를 쓴다. 인풋만 쓰는 경우는 없나?
form엔 action,method 잊지 말기

9강 feed
뭔가를 만들 때는 완성본을 보면서 하는 것을 추천함
보통 이미지를 눌렀을 때 어딘가로 이동하는거면 <a><img/></a>

눌렀을 때 기능을 수행한다->button
form을 제출하는 버튼->submit
reset기능-> reset
둘다 아니고 그냥 구독 구독해제 이런 정도면 button

버튼 눌러야 펴지는거여도 그냥 일단은 전부다 구현하는듯?

10강 gmail inbox
리스트-> 그냥 반복 테이블->카데고리가 있고 그 안의 항목이 있고..
메일함은 테이블로 구현해본다.

class="sr-only" 스크린 리더 온리->그냥 개발자들끼리 스크린 리더기만 읽게 만들자 하는거지
sr-only는 이거만 쓴다고 기능이 구현되는게 아니라 css로 만져야한다.

input이 뭐에 관한 인풋인지 이름을 지정하고 싶으면 label
button의 이름을 지정할거고 안보이게 하고 싶으면 span으로 감싸고 css로 숨긴다. (버튼 이름을 지정하는 것과 버튼에 글자가 나오는 것은 좀 다른가보다)

11강 드롭다운
눌러서 아래로 메뉴가 툭 떨어지는 드롭다운 이미지는 이미지가 버튼같은거라고 생각하면 된다.

12강 뮤직 플레이어
가수명은 엄청 중요한건 아니니까 그냥 strong..!
음악을 넣는건 html에서 오디오로 하지만 숨기고 버튼을 누르면 오디오 재생이 된다는 자바스크립트 처리로 가능하다.

sr-only는 브라우저에게 전달도 하고 스크린 리더에도 읽히지만
그냥 일반 사용자에게는 안보이게 숨기는 정도이고
aria-label은 스크린 리더에게 이렇게 읽어달라고 요청하는거라
재생시간에 대한거는 그냥 스타일 차이 정도고 뭐가 낫다는 없다.
그리고 실제 실시간 차트보면 테이블로 구현한다.

순서가 중요한지 아님 나열이라든지 그런거에서 중요한건 그냥 한개의 열만 있는 경우는 ol,ul을 쓰고
행과 열으로 구분되게 나열되는 것은 테이블로 구현한다.

그리고 아래는 그냥 리스트에 관해..
동일한 구조를 가진 요소가 병렬적으로 나열이 될 때: ul, ol
Key: Value 형태로 해셕이 가능할 때: dl ->key=value로 설명하는 역할정도?

13강 비디오 플레이어
비디오 플레이어는 그냥 정해진 css폼이 있나봄
